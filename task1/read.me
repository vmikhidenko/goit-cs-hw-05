# Асинхронний Сортувач Файлів

## Опис Проекту

Цей Python-скрипт призначений для асинхронного сортування файлів з вихідної папки (`source_folder`) у цільову папку (`destination_folder`) на основі розширень файлів. Скрипт обробляє велику кількість файлів, розподіляючи їх у відповідні підпапки, що полегшує організацію та доступ до файлів.

## Ключові Особливості

- **Асинхронне виконання:** Використання `asyncio` та `ThreadPoolExecutor` для паралельного копіювання файлів.
- **Сортування за розширеннями:** Файли автоматично розподіляються у підпапки відповідно до їхніх розширень.
- **Логування помилок:** Всі помилки записуються у файл `file_sorter.log` для подальшого аналізу.
- **Простота використання:** Фіксовані шляхи до вихідної та цільової папок спрощують запуск скрипту.

## Вимоги

- **Python 3.7 або вище**
- Використовуються лише стандартні бібліотеки Python (`asyncio`, `argparse`, `logging`, `pathlib`, `shutil`, `concurrent.futures`), тому додаткові установки не потрібні.

Використайте наданий скрипт create_test_files.py для створення тестових файлів:

python create_test_files.py
Це створить папку source_folder з різними файлами для тестування.

У скрипті 01.py визначені фіксовані шляхи до вихідної та цільової папок:

SOURCE_FOLDER = Path("/Users/volodymyrmikhidenko/Documents/Computer systems/goit-cs-hw-05/task1/source_folder")
DESTINATION_FOLDER = Path("/Users/volodymyrmikhidenko/Documents/Computer systems/goit-cs-hw-05/task1/destination_folder")

Примітка: Ви можете змінити ці шляхи відповідно до вашої файлової системи.